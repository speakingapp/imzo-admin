const {bot, wit, client} = require('../../bot')
const session = require('telegraf/session')
const { Stage, Markup } = require('telegraf');
const Scene = require('telegraf/scenes/base')
const { Keyboard,Key  } = require('telegram-keyboard')


const Markupkeyboard = Keyboard.make([
    ['üîô –ù–∞–∑–∞–¥']
  ]).reply()

  const keyboard = Keyboard.make([
    ['üìû –ó–∞–∫–∞–∑–∞—Ç—å', 'üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'],
    ['üíé –ö–∞—Ç–∞–ª–æ–≥'],
    ['üåê –¢–µ–ª–µ–≥—Ä–∞–º –≥—Ä—É–ø–ø—É', 'üì© –ö–æ–Ω—Ç–∞–∫—Ç'],
  ]).reply()


const consultationScene = new Scene('consultationScene')



consultationScene.enter(ctx=>ctx.reply('–ö–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã —É –í–∞—Å –∏–º–µ–µ—Ç—Å—è, –£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç?', Markupkeyboard))


consultationScene.on('text', async(ctx)=>{
   if(ctx.message.text==="üîô –ù–∞–∑–∞–¥"){
    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –ú–µ–Ω—é üîù', keyboard);
    return ctx.scene.leave()
    console.log('Scene left')
   }
   return wit.meaning(ctx.message.text)
      .then((result) => {
        const intent = result.intents.map((intent) => intent.name);
        switch (intent[0]) {
          case 'req1':
            ctx.replyWithChatAction('typing');
            setTimeout(() => {
              ctx.replyWithHTML(`–£ –Ω–∞—Å –µ—Å—Ç—å –∞–ª—é–º–∏–Ω–∏–µ–≤—ã–µ –∏ –º–µ—Ç–∞–ª–ª–æ–ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏. –ù–∞—à–∏ –∞–ª—é–º–∏–Ω–∏–µ–≤—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ ‚Äî <b>Termo 65, Termo 78, Termo 98. –ù–∞—à–∏ –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ ‚Äî Quattro 6000, Trio 6000, Engelberg 7000, Engelberg 8000</b>. –ò—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –ö–∞—Ç–∞–ª–æ–≥–µ.`);

            }, 600);
            break;
          case 'size_color':
              ctx.reply('–î–∞, –∫–æ–Ω–µ—á–Ω–æ. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ü–≤–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ —É –Ω–∞—Å –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏.');
            break;
          case 'wit_installation':
              ctx.reply('–î–∞, —É—Å–ª—É–≥–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –º–æ–Ω—Ç–∞–∂–∞ –≤–∫–ª—é—á–µ–Ω—ã –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
            break;
          case 'wit_warranty':
              ctx.reply('–ù–∞—à–∞ –ø—Ä–æ–¥—É–∫—Ü–∏—è –∏–º–µ–µ—Ç 3-–ª–µ—Ç–Ω–∏–π —Å–µ—Ä–≤–∏—Å –∏ 5-–ª–µ—Ç–Ω—é—é –≥–∞—Ä–∞–Ω—Ç–∏—é.');
            break;
          case 'payment_option':
              ctx.reply('–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –Ω–∞–ª–∏—á–Ω—ã–º–∏, –ø–µ—Ä–µ–≤–æ–¥–æ–º –¥–µ–Ω–µ–≥ —Å –ø–ª–∞—Å—Ç–∏–∫–æ–≤–æ–π –∫–∞—Ä—Ç—ã, –ø–µ—Ä–µ–≤–æ–¥–æ–º –¥–µ–Ω–µ–≥ —Å –Ω–æ–º–µ—Ä–∞ —Å—á–µ—Ç–∞. 50% –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –≤–Ω–∞—á–∞–ª–µ, –æ—Å—Ç–∞–ª—å–Ω—ã–µ 50% –æ–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ–¥—É–∫—Ç–∞.');
            break;
          case 'wit_kvmetre':
              ctx.reply('–¶–µ–Ω–∞ –Ω–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–≤. –û–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∏—Å—Ö–æ–¥—è –∏–∑ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –∞ –Ω–µ –∑–∞ –º–µ—Ç—Ä. –¢–æ –µ—Å—Ç—å –∏—Å—Ö–æ–¥—è –∏–∑ —Ü–µ–Ω—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–∏ –¥–≤–µ—Ä–µ–π –∏–ª–∏ –æ–∫–æ–Ω, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç–µ.');
            break;
        case 'install_time':
              ctx.reply('–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∑–∞ 20 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π. –ï—Å–ª–∏ —Å—Ä–æ—á–Ω–æ, —Ç–æ —É—Å—Ç–∞–Ω–æ–≤—è—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.');
               
            break;
            default:
                ctx.reply('–ö–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã —É –≤–∞—Å –µ—Å—Ç—å, –£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç?')
            break;
          
        }
        
      })

      
})

  

// Create a stage and register the scene
const stage = new Stage([consultationScene]);
bot.use(session());
bot.use(stage.middleware());

// Trigger scene when hears 'üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'
bot.hears('üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', (ctx) => ctx.scene.enter('consultationScene'));






